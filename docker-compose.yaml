services:
  api-producer:
    build:
      context: ./api-producer
    container_name: producer
    ports:
      - 2080:2080
    restart: "on-failure"
    command: bash -c "python main.py" #"flask run --host 0.0.0.0 --port 2080"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    volumes:
      - ./data:/data
    environment:
      - CSV_FILE=/data/ip_addresses.csv
      - SERVER_URL=http://0.0.0.0:8080/receive
    networks:
      - dataflow
  api-consumer:
    build:
      context: ./api-consumer
    container_name: consumer
    ports:
      - 8080:8080
    restart: "on-failure"
    command: bash -c "flask run --host 0.0.0.0 --port 8080 --debug"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    depends_on:
      - api-producer
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=development
      - PRODUCER_SERVER_URL=http://localhost:2080/
      - FRONTED_SERVER_URL=http://localhost:5173/
    networks:
      - dataflow

  frontend:
    build:
      context: ./frontend
    #command: bash -c "cd app && npx serve -l 5173 ."
    container_name: frontend
    restart: "on-failure"
    ports:
      - 5173:5173
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    depends_on:
      - api-consumer
    networks:
      - dataflow

networks:
  dataflow:
    driver: bridge